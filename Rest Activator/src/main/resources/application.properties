# This application.properties file is embedded in the Application Jarfile, supplying default settings.
# To replace or override anything, create another application.properties file or application.yml file,
#   and stage it adjacent to the Application Jarfile. Spring Boot will first read the internal
#   application.properties file and then automatically find the external one.

spring.application.name=Rest Activator for JBPM Process

server.port=9000
#security.user.name=netsuite2016
#security.user.password=af25f3408f047480a7966a34e90c1cdb
server.contextPath=/activator
debug=false

# defaults for OAuth2 interface, for verification.
# assume these can be redefined in an external application.yml
#security.oauth2.client.clientId = WNe6byQBs6V4_HWAmiG3P4WLV2OXPI3BbOTS1az8LYhDWaQzhVI_POE6ZPvqryhyw9
#security.oauth2.client.clientSecret = 2664841892831509217
#security.oauth2.client.authorizedGrantTypes = authorization_code,refresh_token,password
#security.oauth2.client.scope: openid
#security.oauth2.resource.userInfoUri=/cloudmgr/user



# logging.level.org.springframework.web=INFO
logging.level.org.springframework.web=DEBUG
# logging.level.org.hibernate=ERROR
logging.level.org.hibernate=DEBUG


# define a default hostname for auto-configuration for EnvironmentSettings
# this will be overridden by external application.yml
target.hostname=localhost
target.port=8080
target.processURL=kie-wb/rest/runtime/com.hatchworks.workflow:workflow:0.0.1-SNAPSHOT/process/

# these don't seem to have any effect. IntelliJ also reports them as "deprecated."
# server.tomcat.accessLogEnabled=true
# server.tomcat.accessLogPattern=%a asdasd

# VIEW RELATED
spring.mvc.view.prefix=/WEB-INF/pages/
spring.mvc.view.suffix=.jsp
server.error.whitelabel.enabled = false

# Management Related
management.context-path=/management
management.user.name=admin
management.user.password=password1!

#security.basic.enabled=true
#management.security.enabled=true

